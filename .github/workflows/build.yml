name: Build README and deploy Datasette

on:
  push:
    branches:
    - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Check out repo
      uses: actions/checkout@v3
      # We need full history to introspect created/updated:
      with:
        fetch-depth: 0
        path: main
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    - uses: actions/cache@v3
      name: Configure pip caching
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r main/requirements.txt
    # - name: Download previous database unless REBUILD in commit message
    #   if: |-
    #     !contains(github.event.head_commit.message, 'REBUILD')
    #   run: curl --fail -o main/tils.db https://s3.amazonaws.com/til.simonwillison.net/tils.db
    #   continue-on-error: true
    - name: Build database
      env:
        MARKDOWN_GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      run: |-
        cd main
        python build_database.py
    - name: Soundness check
      run: |-
        cd main
        datasette . --get / | grep "schu's notebook"
    - name: Update README
      run: |-
        cd main
        python update_readme.py --rewrite
        cat README.md
    - name: Commit and push if README changed
      run: |-
        cd main
        git diff
        git config --global user.email "actions@users.noreply.github.com"
        git config --global user.name "README-bot"
        git diff --quiet || (git add README.md && git commit -m "Update README")
        git push
    # - name: Upload latest tils.db to the S3 bucket
    #   env:
    #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #   run: |-
    #     s3-credentials put-object til.simonwillison.net tils.db main/tils.db
    #
    # - name: Deploy Datasette using fly.io
    #   env:
    #     NOW_TOKEN: ${{ secrets.NOW_TOKEN }}
    #   run: |-
    #     cd main
    #     datasette publish vercel tils.db \
    #       --token $NOW_TOKEN \
    #       --project simon-til \
    #       --scope datasette \
    #       --metadata metadata.yaml \
    #       --static static:static \
    #       --install datasette-template-sql \
    #       --install "datasette-sitemap>=1.0" \
    #       --install "datasette-atom>=0.7" \
    #       --install datasette-json-html \
    #       --install beautifulsoup4 \
    #       --install "datasette-debug-asgi>=1.1" \
    #       --install "datasette-graphql>=2.2" \
    #       --install datasette-block-robots \
    #       --plugins-dir plugins \
    #       --template-dir templates \
    #       --public
